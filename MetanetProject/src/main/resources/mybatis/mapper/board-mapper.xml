<?xml version="1.0" encoding="UTF-8"?>

<!-- DTD 선언 -->
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	mapper라는 영역 안에 구문을 작성한다
	- namespace : mapper간의 충돌을 방지 하기 위한 이름 (필수)
-->
<mapper namespace="board">
	
	<!-- 
		데이터베이스 이용에 필요한 구문을 작성는 영역
		- 가급적 한 테이블만 접근하도록 구성
		- CRUD에 맞는 태그를 사용 
			- C : insert
			- R : select
			- U : update
			- D : delete
			
		- id : 외부에서 구문을 호출하기 위한 식별자(namespace와 같이 사용) - 필수
		- parameterType : 구문 실행을 위해 전달되는 데이터의 형태(별칭 사용 가능, alias)
		- resultType : 결과물(ResultSet)이 변환될 형태. 단일/목록 모두 단위 형태를 기재
		
		- #{name} : 전달되는 데이터 묶음에서 name이라는 이름을 가진 데이터를 형태에 맞게 채워라(동적 바인딩). name은 변할 수 있음
	-->
	
	<!-- 전체 게시글 조회 -->
	<select id="countBoard" resultType="int">
	select count(*) from board
	</select>
	
	<select id="list" parameterType="com.meta.seoul.map.vo.Board" resultType="com.meta.seoul.map.vo.Board">
    	select RN,POST_CODE,POST_TITLE,POST_CONTENT,POST_LOVE,POST_COUNT,WRITE_DATE,MODIFY_DATE,C.USER_CODE,REGION_CODE,REGION_NAME,REGION_GB,BOARDIMG,THUMBIMG,m.USER_ID,m.USER_NAME
    from (
        SELECT ROWNUM RN,A.POST_CODE,A.POST_TITLE,A.POST_CONTENT,A.POST_LOVE,A.POST_COUNT,A.WRITE_DATE,A.MODIFY_DATE,A.USER_CODE,A.REGION_CODE,A.REGION_NAME,A.REGION_GB,A.BOARDIMG,A.THUMBIMG
         FROM (SELECT * FROM BOARD) A
         order by POST_CODE DESC
    ) c
    join member m on c.user_code = m.user_code
    WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<insert id="write" parameterType="com.meta.seoul.map.vo.Board">
		insert into board(POST_CODE,POST_TITLE,POST_CONTENT,REGION_CODE,REGION_NAME,REGION_GB,BOARDIMG,THUMBIMG,USER_CODE) values(Board_SEQ.nextval,#{post_title},#{post_content},#{region_code},#{region_name},#{region_gb},#{boardImg},#{thumbImg},#{user_code})
	</insert>
	
	<select id="read" parameterType="int" resultType="com.meta.seoul.map.vo.Board">
		select post_code,
			   post_title,
			   post_love,
			   post_content,
			   post_count,
			   write_date,
			   modify_date,
			   b.user_code,
			   region_code,
			   region_name,
			   region_gb,
			   boardImg,
			   thumbImg,
               user_id,
               user_name
		from board b
        join member m on m.user_code = b.user_code
		where post_code = #{post_code} 
	</select>
	
	<delete id="delete" parameterType="int">
		delete from board where post_code=#{post_code}
	</delete>
	
	<update id="update" parameterType="com.meta.seoul.map.vo.Board">
		update board set post_title=#{post_title},post_content=#{post_content},modify_date=sysdate,thumbImg=#{thumbImg},boardImg=#{boardImg} where post_code=#{post_code}
	</update>
	
	<update id="updateCount" parameterType="int">
		update board set post_count=post_count+1 where post_code=#{post_code}
	</update>
	
	<update id="updateLove" parameterType="int">
	update board set post_love=post_love+1 where post_code=#{post_code}
	</update>
	
	<insert id="checkLove" parameterType="com.meta.seoul.map.vo.LoveBoard">
	insert into love_Board(idx,post_code,user_code,likecheck) values(love_Board_SEQ.nextval,#{post_code},#{user_code},1)
	</insert>
	
	<select id="loveYN" resultType="com.meta.seoul.map.vo.LoveBoard">
	select idx,post_code,user_code,likecheck from love_board where post_code=#{post_code} and user_code=#{user_code}
	</select>
	
	<!-- 지역게시글 조회 -->
	<select id="countRegionBoard" parameterType="int" resultType="int">
	select count(*) from board where region_code=#{region_code}
	</select>
	
	<select id="listRegion" parameterType="com.meta.seoul.map.vo.Board" resultType="com.meta.seoul.map.vo.Board">
    	select RN,POST_CODE,POST_TITLE,POST_CONTENT,POST_LOVE,POST_COUNT,WRITE_DATE,MODIFY_DATE,C.USER_CODE,REGION_CODE,REGION_NAME,REGION_GB,BOARDIMG,THUMBIMG,m.USER_ID,m.USER_NAME
    from (
        SELECT ROWNUM RN,A.POST_CODE,A.POST_TITLE,A.POST_CONTENT,A.POST_LOVE,A.POST_COUNT,A.WRITE_DATE,A.MODIFY_DATE,A.USER_CODE,A.REGION_CODE,A.REGION_NAME,A.REGION_GB,A.BOARDIMG,A.THUMBIMG
         FROM (SELECT * FROM BOARD WHERE region_code=#{region_code}) A
    ) c
    join member m on c.user_code = m.user_code
    WHERE RN BETWEEN #{start} AND #{end}
    order by POST_CODE DESC
	</select>
	
	
</mapper>